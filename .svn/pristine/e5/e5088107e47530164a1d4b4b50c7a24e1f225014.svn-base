//
//  ContactsViewController.m
//  TJYD
//
//  Created by 吴定如 on 17/3/31.
//  Copyright © 2017年 Dist. All rights reserved.
//

#import "ContactsViewController.h"
#import "DamTreeView.h"
#import "ContactsPickerView.h"
#import "DeviceInfo.h"
#import "DamPeopleSelectTableCell.h"

static NSString *cellId = @"DamPeopleSelectTableCell";

@interface ContactsViewController () <UITableViewDelegate,UITableViewDataSource,UISearchBarDelegate,TreeDelegate>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSMutableArray *dataArray;
@property (nonatomic, strong) NSMutableArray *searchArray;
@property (nonatomic, strong) UIWebView *webView;
@property (nonatomic, strong) UISearchBar *searchBar;
@property (nonatomic, assign) BOOL isSearch;
@property (nonatomic, assign) BOOL isEditing;
@property(nonatomic,strong) NSMutableArray *markArray;//标记数组(分组收放)
@property(nonatomic,strong) NSMutableArray *groupImgArray;//分组图标
@property (nonatomic,strong) DamTreeView *DamtreeView;//树形表格

@end

@implementation ContactsViewController

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    // KVO(监听屏幕旋转)
    [self.view addObserver:self forKeyPath:@"frame" options:NSKeyValueObservingOptionNew context:nil];
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
    
    // 移除通知
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [self.view removeObserver:self forKeyPath:@"frame" context:nil];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = [UIColor colorWithRed:201/255.0 green:201/255.0  blue:206/255.0  alpha:1.0];
    self.view.backgroundColor = [UIColor whiteColor];
    [self initNavigationBarTitle:@"通讯录"];
    
    [self createTableViewAndSearchBar];
    [self loadData];
        
}

#pragma mark -- 监听屏幕旋转
- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context {
    if (![@"frame" isEqualToString:keyPath]) return;
    
    _searchBar.frame = CGRectMake(0, 0, SCREEN_WIDTH, 44);
    _DamtreeView.frame = CGRectMake(0, 44, SCREEN_WIDTH, SCREEN_HEIGHT-64-44);
    [_DamtreeView screenRotation];
    
//    if (_isSearch || _isEditing) {
//        _searchBar.frame = CGRectMake(0, 20, SCREEN_WIDTH, 44);
//        _tableView.frame = CGRectMake(0, 64, SCREEN_WIDTH, SCREEN_HEIGHT-64);
//    } else {
//        _searchBar.frame = CGRectMake(0, 0, SCREEN_WIDTH, 44);
//        _tableView.frame = CGRectMake(0, 44, SCREEN_WIDTH, SCREEN_HEIGHT-64-44);
//    }
//    
//    [_tableView reloadData];
}

#pragma mark -- 创建 tableView && SearchBar

-(void)createTableViewAndSearchBar
{
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 44, SCREEN_WIDTH, SCREEN_HEIGHT-64-44) style:UITableViewStylePlain];
    //tableView.backgroundColor = [UIColor colorWithRed:250/255.0 green:250/255.0 blue:250/255.0 alpha:1];
    tableView.tableFooterView = [[UIView alloc] init];
    tableView.dataSource = self;
    tableView.delegate = self;
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView = tableView;
    [tableView registerNib:[UINib nibWithNibName:cellId bundle:nil] forCellReuseIdentifier:cellId];
    [self.view addSubview:tableView];
    
    UISearchBar *searchBar = [[UISearchBar alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 44)];
    //设置输入颜色
    //searchBar.tintColor = [UIColor blackColor];
    //UIImage *image =[self imageWithColor:[UIColor whiteColor]];
    //设置搜索框的背景图片
    //[searchBar setSearchFieldBackgroundImage:image forState:UIControlStateNormal];
    //设置背景颜色
    //[searchBar setBarTintColor:GRAYCOLOR];
    searchBar.placeholder = @"搜索";
    searchBar.layer.borderColor = [UIColor colorWithRed:201/255.0 green:201/255.0  blue:206/255.0  alpha:1.0].CGColor;
    searchBar.layer.borderWidth = 0.5;
    searchBar.delegate = self;
    searchBar.clearsContextBeforeDrawing = YES;
    //searchBar.showsCancelButton = NO;
    searchBar.searchBarStyle = UISearchBarStyleDefault;
    //[searchBar sizeToFit];
    _searchBar = searchBar;
    
    [self.view addSubview:_searchBar];
    
}

-(void)loadData
{
    _dataArray = [NSMutableArray array];
    _searchArray = [NSMutableArray array];
    
    [MBProgressHUD showMessage:@"正在加载" toView:self.view];
    // 获取通讯录
    NSString *ticket = [UserDefaults objectForKey:@"ticket"];
    NSString *des = [DES encryptUseDES:[NSString stringWithFormat:@"action==ApprpveMobile/getOrgAndUser.do,%@",ticket] key:Key];
    DistServiceAPI *api = [[DistServiceAPI alloc] initWithDes:des DistServiceActionType:DistServiceActionTypeGetContacts requestMethod:DistRequestMethodPost arguments:nil];
    [api startWithCompletionBlockWithSuccess:^(__kindof DistBaseRequest *request) {
        
        NSDictionary *JsonDic = request.responseJSONObject;
        if ([[JsonDic objectForKey:@"state"] isEqualToString:@"true"]) {
            NSArray *users = [JsonDic objectForKey:@"result"];
            DamTreeView *treeView = [[DamTreeView instanceView] initTreeWithFrame:CGRectMake(0, 44, SCREEN_WIDTH, SCREEN_HEIGHT-64-44) dataArray:users haveHiddenSelectBtn:NO haveHeadView:NO isEqualX:NO];
            treeView.returnPeopleArrayBlock = ^(NSArray *peopleArray){
                _dataArray = [NSMutableArray arrayWithArray: peopleArray];
            };
            _DamtreeView = treeView;
            treeView.delegate = self;
            [self.view addSubview:treeView];
        }
        
        [MBProgressHUD hideHUDForView:self.view animated:NO];
    } failure:^(__kindof DistBaseRequest *request, NSError *error) {
        [MBProgressHUD hideHUDForView:self.view animated:NO];
    }];
    
}

#pragma mark -- DamTreeViewDelegate

-(void)itemSelectInfo:(DamPeopleCellModel *)item
{
    DLog(@"DamPeopleCellModel::%@",item);
    
    DamPeopleCellModel *peopleModel = item;
    // 提示：不要将webView添加到self.view，如果添加会遮挡原有的视图
    // 懒加载
    if (!_webView) {
        _webView = [[UIWebView alloc] init];
    }
    
    // 判断设备能否打电话
    if(!([[DeviceInfo deviceModel] isEqualToString:@"iPod touch"]||[[DeviceInfo deviceModel] isEqualToString:@"iPad"]||[[DeviceInfo deviceModel] isEqualToString:@"iPhone Simulator"])){
        
        // 选择拨打手机号
        if (![peopleModel.mobilePhone isEqualToString:@""] && peopleModel.mobilePhone != nil) {
            
            ContactsPickerView *pickerView = [[ContactsPickerView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT) withMobilePhone:peopleModel.mobilePhone];
            // 拨打电话
            pickerView.selectedBlock = ^(NSString *phoneNumber)
            {
                NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",phoneNumber]];
                NSURLRequest *request = [NSURLRequest requestWithURL:url];
                
                [_webView loadRequest:request];
            };
            
            [pickerView showInView:self.view.window.rootViewController.view animated:YES];
        }
    }
}

-(void)itemSelectArray:(NSArray *)selectArray
{
    NSLog(@"selectArray::%@",selectArray);
}

#pragma mark -- tableViewDelegate

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return _dataArray.count;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{

    return _isSearch ? _searchArray.count : _dataArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    DamPeopleSelectTableCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    
    return cell;
}


-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 60.0;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return _isSearch ? 0.0 : 40.0;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
//    [self.view endEditing:YES];
//    // 提示：不要将webView添加到self.view，如果添加会遮挡原有的视图
//    // 懒加载
//    if (!_webView) {
//        _webView = [[UIWebView alloc] init];
//    }
//    
//    ChildrenModel *childModel;
//    if (_isSearch) {
//        childModel = _searchDataArray[indexPath.row];
//    }else{
//        ContactsModel *model = _dataArray[indexPath.section];
//        childModel = model.users[indexPath.row];
//    }
//    // 判断设备能否打电话
//    if(!([[DeviceInfo deviceModel] isEqualToString:@"iPod touch"]||[[DeviceInfo deviceModel] isEqualToString:@"iPad"]||[[DeviceInfo deviceModel] isEqualToString:@"iPhone Simulator"])){
//        
//        // 只有手机号
//        if ([childModel.dh isEqualToString:@""]||childModel.dh == nil) {
//            
//            NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",childModel.ch]];
//            NSURLRequest *request = [NSURLRequest requestWithURL:url];
//            
//            [_webView loadRequest:request];
//        }
//        // 有短号和手机号
//        else{
//            ContactsPickerView *pickerView = [[ContactsPickerView alloc] initWithFrame:SCREEN_BOUNDS withChildrenModel:childModel];
//            // 发布微博
//            pickerView.selectedBlock = ^(NSString *phoneNumber)
//            {
//                NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",phoneNumber]];
//                NSURLRequest *request = [NSURLRequest requestWithURL:url];
//                
//                [_webView loadRequest:request];
//            };
//            
//            [pickerView showInView:self.view.window.rootViewController.view animated:YES];
//            
//        }
//    }
}

#pragma mark - UISearchBarDelegate
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    // 先清空原来的搜索结果
    [_searchArray removeAllObjects];
    
    NSString *searchString = searchBar.text;
    //删除空格符
    searchString = [searchString stringByReplacingOccurrencesOfString:@" " withString:@""];
    
    for (DamPeopleCellModel *model in _dataArray)
    {
        if ([model.name rangeOfString:searchString].location != NSNotFound || [model.mobilePhone rangeOfString:searchString].location != NSNotFound || [model.fixedPhone rangeOfString:searchString].location != NSNotFound || [model.loginName rangeOfString:searchString].location != NSNotFound)
        {
            [_searchArray addObject:model];
        }
    }
    if (searchText.length == 0) {
        _isSearch = NO;
    }else {
        _isSearch = YES;
    }
    [_tableView reloadData];
}

- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar
{
    // 当前处于编辑状态
    _isEditing = YES;
    [UIView animateWithDuration:0.3 animations:^{
        self.navigationController.navigationBarHidden = YES;
        _searchBar.frame = CGRectMake(0, 20, SCREEN_WIDTH, 44);
        _tableView.frame = CGRectMake(0, 64, SCREEN_WIDTH, SCREEN_HEIGHT-64);
        _searchBar.showsCancelButton = YES;
        // 状态栏颜色
        [UIApplication sharedApplication].statusBarStyle =UIStatusBarStyleDefault;
    }];
}

- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar
{
    // 状态栏颜色
    [UIApplication sharedApplication].statusBarStyle =UIStatusBarStyleLightContent;
    self.navigationController.navigationBarHidden = NO;
    _searchBar.frame = CGRectMake(0, 0, SCREEN_WIDTH, 44);
    _tableView.frame = CGRectMake(0, 44, SCREEN_WIDTH, SCREEN_HEIGHT-64-44);
    _searchBar.showsCancelButton = NO;
    [_searchBar resignFirstResponder];
    _searchBar.text = @"";
    _isSearch = NO;
    // 当前处于未编辑状态
    _isEditing = NO;
    
    [_tableView reloadData];
}

#pragma mark -- 防止搜索状态下tableView下面遮挡的问题

//- (void)scrollViewDidScroll:(UIScrollView *)scrollView
//{
//    if (scrollView == _tableView)
//    {
//        [self.view endEditing:YES];
//    }
//}



- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
